name: Deploy Staging ðŸš€

on:
  push:
    branches:
      - main

jobs:
  deploy-to-staging:
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY_STAGING }}

      - name: Deploy to Staging Server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER_NAME_STAGING }}@${{ secrets.SSH_HOST_STAGING }} << 'EOF'
            APP_STG_PATH="/home/ubuntu/staging"
            if [ -d "$APP_STG_PATH" ]; then
              cd $APP_STG_PATH
              sudo docker compose down || true
              git fetch origin main
              git merge FETCH_HEAD || true
            else
              ssh-keyscan github.com >> ~/.ssh/known_hosts
              git clone ${{ secrets.GIT_URL }} $APP_STG_PATH
              cd $APP_STG_PATH
            fi

            # Generate .env file
            echo "MINIO_STG_ENDPOINT=${{ secrets.MINIO_STG_ENDPOINT }}" > .env
            echo "MINIO_STG_ACCESS_KEY=${{ secrets.MINIO_STG_ACCESS_KEY }}" >> .env
            echo "MINIO_STG_SECRET_KEY=${{ secrets.MINIO_STG_SECRET_KEY }}" >> .env
            echo "APP_STG_PORT_1=${{ secrets.APP_STG_PORT_1 }}" >> .env
            echo "APP_STG_PORT_2=${{ secrets.APP_STG_PORT_2 }}" >> .env

            # Start the application using Docker Compose
            sudo docker compose up --build --detach pacmusic-stg-1 pacmusic-stg-2 || true
          EOF

      - name: Test Endpoint 1
        run: |
          sleep 10
          curl http://localhost:${{ secrets.APP_STG_PORT_1 }}

      - name: Test Endpoint 2
        run: |
          sleep 10
          curl http://localhost:${{ secrets.APP_STG_PORT_2 }}
